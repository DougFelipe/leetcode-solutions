{
    "titulo": "Solução em Java para Soma de Dois Números",
    "descricao": "Nesta solução utilizamos um método simples e direto para calcular a soma de dois números em Java. Também incluímos um exemplo avançado de backtracking para resolver problemas envolvendo operadores.",
    "diagramaPseudocodigo": "imagens/java_diagrama_pseudocodigo1.png",
    "diagramaAtividades": "imagens/java_diagrama_atividades1.png",
    "codigo": "public int soma(int a, int b) {\n    return a + b;\n}\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List<String> addOperators(String num, int target) {\n        List<String> result = new ArrayList<>();\n        if (num == null || num.length() == 0) return result;\n        backtrack(num, target, 0, 0, 0, \"\", result);\n        return result;\n    }\n\n    private void backtrack(String num, int target, int index, long currentValue, long lastOperand, String path, List<String> result) {\n        if (index == num.length()) {\n            if (currentValue == target) {\n                result.add(path);\n            }\n            return;\n        }\n\n        for (int i = index; i < num.length(); i++) {\n            if (i != index && num.charAt(index) == '0') break;\n\n            String currentSubstring = num.substring(index, i + 1);\n            long currentNumber = Long.parseLong(currentSubstring);\n\n            if (index == 0) {\n                backtrack(num, target, i + 1, currentNumber, currentNumber, currentSubstring, result);\n            } else {\n                backtrack(num, target, i + 1, currentValue + currentNumber, currentNumber, path + \"+\" + currentSubstring, result);\n\n                backtrack(num, target, i + 1, currentValue - currentNumber, -currentNumber, path + \"-\" + currentSubstring, result);\n\n                backtrack(num, target, i + 1, \n                          currentValue - lastOperand + lastOperand * currentNumber, \n                          lastOperand * currentNumber, \n                          path + \"*\" + currentSubstring, \n                          result);\n            }\n        }\n    }\n}"
}
